# .github/workflows/release.yml

name: Release Go Binary

on:
  push:
    tags:
      - 'v*' # Memicu workflow saat tag baru seperti v0.1.0 di-push

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # Izin untuk membuat rilis dan mengunggah aset

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25' # Sesuai dengan versi Go di go.mod Anda (1.25.1)

      - name: Get version from tag
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Build binaries
        run: |
          echo "Building binaries for version ${{ env.VERSION }}..."
          # Linux
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o "panggil_${{ env.VERSION }}_linux_amd64"
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o "panggil_${{ env.VERSION }}_linux_arm64"
          # macOS (Darwin)
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o "panggil_${{ env.VERSION }}_darwin_amd64"
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o "panggil_${{ env.VERSION }}_darwin_arm64"

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          # Ini akan membuat rilis dalam bentuk draft. Anda bisa memeriksanya sebelum mempublikasikan.
          # Hapus baris `draft: true` jika ingin langsung mempublikasikan rilis.
          draft: true
          # Menggunakan nama tag sebagai judul rilis (misal: v0.1.0)
          name: ${{ github.ref_name }}
          # Mengambil catatan rilis dari tag anotasi atau commit message
          generate_release_notes: true
          files: "panggil_*" # Pola untuk menemukan semua file biner yang akan diunggah
